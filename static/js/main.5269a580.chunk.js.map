{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","porps","Detail","props","location","history","undefined","push","style","backgroundImage","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5269a580.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// state필요없으면 class 컴포낸트할 필요없음. function컴포넌트 사용함\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title}></img>\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genres, index) => (\r\n              //map은 arg2개 있음(현재item, item number) / map의 각 item은 key필요함 key={index}\r\n              <li key={index} className=\"genres__genres\">\r\n                {genres}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n// state갖기위해 class component가질 필요없다!!! react hook이라는 것 때문에\r\n// setState()안에 state추가는 자유 / 하지만 state안에 모든 default값 선언할 필요는 없음\r\n// axios : fetch위에 있는 작은 layer\r\n// yts api는 불법사이트로 계속url바껴서 니꼬가 만든 url사용함.\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  //  axios.get은 오래걸림 / 시간필요해서 async await넣음 /그래서 axios끝날때까지 기다리고 계속함/ JS꺼임\r\n  //  async비동기 : \"이걸 기다려라\"\r\n  //  함수내부 = 뭘기다려? axio? \"응\"\r\n  // const movies.data.data.movies가 아니라 단축하기 {data: {data: {movies}}}\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({ movies, isLoading: false });\r\n    // this.setState({movies(state에서온):movies(axios에서온)})을 단축해서 ({movies})\r\n  };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n\r\n    // setTimeout(() => {\r\n    //   this.setState({ isLoading: false });\r\n    // }, 6000);      //setTimeout은 js꺼임/ 6초후 동작\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state; //state에서 isLoading,movies가져오기\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id} //key가 필요해서 중복없는 id로 넣음\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n    // 로딩중(데이터 fetch하고) : 로딩끝나면 map만들어 movie render하기\r\n    // 리액트가 class component랑 js class랑 혼동해서 classname사용\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About(porps) {\r\n  // console.log(porps);\r\n  return <span>About this page: I built it because I love movies.</span>;\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Detail.css\";\r\n\r\n// function Detail({ location }) {\r\n//   console.log(location);\r\n//   return <span>hello</span>;\r\n// }\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    // console.log(this.props);\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        // <div className=\"movie_detail_back\">\r\n        <div className=\"movie_detail\">\r\n          <div\r\n            style={{ backgroundImage: `url(${location.state.poster})` }}\r\n            className=\"movie_detail_back\"\r\n          ></div>\r\n          <img\r\n            src={location.state.poster}\r\n            alt={location.state.title}\r\n            title={location.state.title}\r\n            className=\"movie_detail_img\"\r\n          ></img>\r\n          <div className=\"detail_data\">\r\n            <h3 className=\"movie__title\">{location.state.title}</h3>\r\n            <h5 className=\"movie__year\">{location.state.year}</h5>\r\n            <ul className=\"movie__genres\">\r\n              {location.state.genres.map((genres, index) => (\r\n                //map은 arg2개 있음(현재item, item number) / map의 각 item은 key필요함 key={index}\r\n                <li key={index} className=\"genres__genres\">\r\n                  {genres}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{location.state.summary}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">HOME</Link>\r\n      <Link to=\"/about\">ABOUT</Link>\r\n    </div>\r\n  );\r\n}\r\n// a태그는 누르면 다시 리로딩하기때문에 Link사용/ href=to로 사용된다.\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport \"./App.css\";\r\n\r\n//exact=\"true\"는 path=\"/\"이거 아니면 렌더링 안한다는 뜻.\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n    </HashRouter>\r\n\r\n    //  리액트 라우터 url 설명\r\n    // <HashRouter>\r\n    //   <Route path=\"/home\">\r\n    //     <h1>Home</h1>\r\n    //   </Route>\r\n    //   <Route path=\"/home/intro\">\r\n    //     <h1>Intro</h1>\r\n    //   </Route>\r\n    //   <Route path=\"/about\">\r\n    //     <h1>About</h1>\r\n    //   </Route>\r\n    // </HashRouter>\r\n    // 라우터는 url\"/home\"을 가져와서 다 비교한다. 그래서 \"/home\"이 들어있는 라우터\"/home/intro\"까지 렌더링한다.\r\n    // 그래서 맨위의 라우터처럼 exact=\"true\"를 써야 (\"/\"을 포함한 \"/about\")도 렌더링하지않고 \"/\" 한개만 렌더링한다.\r\n\r\n    // Navigaion Link 설명\r\n    // 네비 링크를 쓴다면 라우터태그 안에서 써야 한다.\r\n\r\n    // HashRouter 는 /#/이 url에 표시됨\r\n    // BrowserRouter 는 /이 url에 표시됨 --github pages에 설정하기 짜증남. 그래서 해쉬라우터사용함\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"potato\")\n);\n"],"sourceRoot":""}